---
# This example requires Lima v0.7.0 or later.

arch: "default"
images:
  - location: "https://download.fedoraproject.org/pub/fedora/linux/releases/34/Cloud/x86_64/images/Fedora-Cloud-Base-34-1.2.x86_64.qcow2"
    arch: "x86_64"
    digest: "sha256:b9b621b26725ba95442d9a56cbaa054784e0779a9522ec6eafff07c6e6f717ea"
  - location: "https://download.fedoraproject.org/pub/fedora/linux/releases/34/Cloud/aarch64/images/Fedora-Cloud-Base-34-1.2.aarch64.qcow2"
    arch: "aarch64"
    digest: "sha256:141f16f52bfbe159947267658a0dbfbbe96fd5b988a95d1271f9c9ed61156da2"

cpus: 2
memory: "2GiB"

mounts:
  - location: "~"
    writable: false
  - location: "/tmp/lima"
    writable: true

containerd:
  system: false
  user: false

# See https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/
provision:
  - mode: system
    script: |
      #!/bin/bash
      set -eux -o pipefail
      # containerd
      yum install -y containerd
      mkdir -p /etc/containerd
      containerd config default | sed -e '/bin_dir/ s|/opt/cni/bin|/usr/libexec/cni|' | sudo tee /etc/containerd/config.toml
      systemctl restart containerd
      # buildkit
      #yum install -y buildkit
        yum install -y golang-github-moby-buildkit
        curl -L https://raw.githubusercontent.com/moby/buildkit/master/examples/systemd/buildkit.service | sed -e '/ExecStart/ s|/usr/local/bin|/usr/bin|' | sudo tee /usr/lib/systemd/system/buildkit.service
        curl -L https://raw.githubusercontent.com/moby/buildkit/master/examples/systemd/buildkit.socket | sudo tee /usr/lib/systemd/system/buildkit.socket
      mkdir -p /etc/buildkit
      cat  <<EOF | sudo tee /etc/buildkit/buildkitd.toml
      [worker.oci]
        enabled = false
      [worker.containerd]
        enabled = true
        namespace = "k8s.io"
      EOF
      systemctl restart buildkit
  - mode: system
    script: |
      #!/bin/bash
      set -eux -o pipefail
      command -v kubectl && exit 0
      # Installing kubeadm on your hosts
      cat <<EOF | sudo tee /etc/modules-load.d/containerd.conf
      overlay
      br_netfilter
      EOF
      modprobe overlay
      modprobe br_netfilter
      cat <<EOF | sudo tee /etc/sysctl.d/99-kubernetes-cri.conf
      net.bridge.bridge-nf-call-iptables  = 1
      net.ipv4.ip_forward                 = 1
      net.bridge.bridge-nf-call-ip6tables = 1
      EOF
      sysctl --system
      cat <<EOF | sudo tee /etc/yum.repos.d/kubernetes.repo
      [kubernetes]
      name=Kubernetes
      baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-\$basearch
      enabled=1
      gpgcheck=1
      repo_gpgcheck=1
      gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
      exclude=kubelet kubeadm kubectl
      EOF
      # cri-tools
      yum install -y cri-tools
      cat  <<EOF | sudo tee /etc/crictl.yaml
      runtime-endpoint: unix:///run/containerd/containerd.sock
      image-endpoint: unix:///run/containerd/containerd.sock
      EOF
      # cni-plugins
      yum install -y containernetworking-plugins-0.9.1-4.fc34 # flannel
      # Set SELinux in permissive mode (effectively disabling it)
      setenforce 0
      sed -i 's/^SELINUX=enforcing$/SELINUX=permissive/' /etc/selinux/config
      yum install -y kubelet kubeadm kubectl --disableexcludes=kubernetes
      systemctl enable --now kubelet
  - mode: system
    script: |
      #!/bin/bash
      set -eux -o pipefail
      test -e /etc/kubernetes/admin.conf && exit 0
      export KUBECONFIG=/etc/kubernetes/admin.conf
      # Initializing your control-plane node
      kubeadm init --cri-socket=/run/containerd/containerd.sock --pod-network-cidr=10.244.0.0/16
      # Installing a Pod network add-on
      kubectl apply -f https://raw.githubusercontent.com/flannel-io/flannel/v0.14.0/Documentation/kube-flannel.yml
      # Control plane node isolation
      kubectl taint nodes --all node-role.kubernetes.io/master-
  - mode: user
    script: |
      #!/bin/bash
      set -eux -o pipefail
      mkdir -p $HOME/.kube
      sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
      sudo chown $(id -u):$(id -g) $HOME/.kube/config

probes:
  - script: |
      #!/bin/bash
      set -eux -o pipefail
      if ! timeout 30s bash -c "until command -v kubectl >/dev/null 2>&1; do sleep 3; done"; then
        echo >&2 "kubectl is not installed yet"
        exit 1
      fi
    hint: See "/var/log/cloud-init-output.log". in the guest
  - script: |
      #!/bin/bash
      set -eux -o pipefail
      if ! timeout 300s bash -c "until test -e /etc/kubernetes/admin.conf >/dev/null 2>&1; do sleep 3; done"; then
        echo >&2 "/etc/kubernetes/admin.conf is not installed yet"
        exit 1
      fi
  - script: |
      #!/bin/bash
      set -eux -o pipefail
      if ! timeout 300s bash -c "until kubectl version >/dev/null 2>&1; do sleep 3; done"; then
        echo >&2 "kubernetes cluster is not up and running yet"
        exit 1
      fi

firmware:
  legacyBIOS: true
